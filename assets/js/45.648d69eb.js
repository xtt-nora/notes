(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{476:function(s,t,a){s.exports=a.p+"assets/img/sql.d2f84921.png"},512:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"进阶"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[s._v("#")]),s._v(" 进阶")]),s._v(" "),t("h2",{attrs:{id:"mysql体系结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql体系结构"}},[s._v("#")]),s._v(" MySQL体系结构")]),s._v(" "),t("p",[t("img",{attrs:{src:a(476),alt:"这是图片",title:"Magic Gardens"}})]),s._v(" "),t("p",[s._v("我们可以看到MySQL Server是分层的，"),t("strong",[s._v("分为连接层、服务层、引擎层和存储层")])]),s._v(" "),t("ul",[t("li",[s._v("连接层：主要接收客户端的连接，完成连接的处理并且完成连接的授权")]),s._v(" "),t("li",[s._v("服务层：绝大部分的功能是在服务层实现的，如sql接口、解析器等")]),s._v(" "),t("li",[s._v("引擎层：存储引擎的提供")]),s._v(" "),t("li",[s._v("存储层：存储数据库的相关数据")])]),s._v(" "),t("h2",{attrs:{id:"存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[s._v("#")]),s._v(" "),t("strong",[s._v("存储引擎")])]),s._v(" "),t("h3",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("blockquote",[t("p",[s._v("存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表的，而不是基于库的，所以存储引擎也可以被称为表类型。"),t("strong",[s._v("MySQL建表的默认存储引擎为InnoDB")]),s._v("。")])]),s._v(" "),t("ul",[t("li",[s._v("在创建表时，可以指定存储引擎")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("类型 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" 字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("注释"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\t字段n 字段n类型 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" 字段n注释"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNODB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" 表注释"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),t("ul",[t("li",[s._v("查看当前数据库支持的存储引擎")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" ENGINES"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),t("ul",[t("li",[s._v("InnoDB：InnoDB是一种兼顾高可靠性和高性能的通用存储引擎。innoDB引擎的每张表都会对应这样一个表空间文件xxx.ibd，存储该表的表结构、数据和索引。其特点是\n"),t("ul",[t("li",[s._v("DML操作遵循ACID模型，支持事务")]),s._v(" "),t("li",[s._v("行级锁，提高并发访问性能")]),s._v(" "),t("li",[s._v("支持外键FOREIGN KEY约束，保证数据的完整性和正确性")])])]),s._v(" "),t("li",[s._v("MyISAM：MyISAM是MySQL早期的默认存储引擎。其特点是：\n"),t("ul",[t("li",[s._v("不支持事务，不支持外键")]),s._v(" "),t("li",[s._v("支持表锁，不支持行锁")]),s._v(" "),t("li",[s._v("访问速度快")])])]),s._v(" "),t("li",[s._v("Memory：Memory引擎的表数据是存储在内存中的，由于受到硬件问题的影响，只能将这些表作为临时表或缓存使用。其特点是:\n"),t("ul",[t("li",[s._v("内存存放")]),s._v(" "),t("li",[s._v("hash索引（默认）")])])])]),s._v(" "),t("h2",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("blockquote",[t("p",[s._v("索引(index)是帮助MySQL高效获取数据的数据结构。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用数据，这样就可以在这些数据结构上实现高效查找算法。")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("优点！")]),s._v(" "),t("ul",[t("li",[s._v("提高数据检索的效率，降低数据库的IO成本")]),s._v(" "),t("li",[s._v("通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗")])])]),s._v(" "),t("li",[t("strong",[s._v("缺点！！！")]),s._v(" "),t("ul",[t("li",[s._v("索引列也是需要占一定空间的")]),s._v(" "),t("li",[s._v("索引大大提高了查询效率，同时却也降低更新表的速度，如对表进行INSERT、UPDATE、DELETE时，效率降低")])])])]),s._v(" "),t("h3",{attrs:{id:"结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[s._v("#")]),s._v(" 结构")]),s._v(" "),t("p",[s._v("MySQL的索引是在存储引擎层实现的，不同的存储引擎有不同的结构。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("索引结构")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("B+Tree索引")]),s._v(" "),t("td",[s._v("最常见的索引类型，大部分引擎支持B+树索引")])]),s._v(" "),t("tr",[t("td",[s._v("Hash索引")]),s._v(" "),t("td",[s._v("底层数据结构是用哈希表实现的，只有精确匹配索引列的查询才有效，不支持范围查询")])]),s._v(" "),t("tr",[t("td",[s._v("R tree（空间索引）")]),s._v(" "),t("td",[s._v("空间索引是MyISAM引擎的一个特殊索引类型，主要用于地理空间数据类型，通常是用较少")])]),s._v(" "),t("tr",[t("td",[s._v("Full-text（全文索引）")]),s._v(" "),t("td",[s._v("是一种通过建立倒排索引，快速匹配文档的方式。")])])])]),s._v(" "),t("p",[s._v("其中以上各种索引结构在各存储引擎的支持情况如下")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("索引")]),s._v(" "),t("th",[s._v("InnoDB")]),s._v(" "),t("th",[s._v("MyISAM")]),s._v(" "),t("th",[s._v("Memory")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("B+Tree索引")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("Hash索引")]),s._v(" "),t("td",[s._v("不支持")]),s._v(" "),t("td",[s._v("不支持")]),s._v(" "),t("td",[s._v("支持")])]),s._v(" "),t("tr",[t("td",[s._v("R tree（空间索引）")]),s._v(" "),t("td",[s._v("不支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("不支持")])]),s._v(" "),t("tr",[t("td",[s._v("Full-text（全文索引）")]),s._v(" "),t("td",[s._v("5.6版本后支持")]),s._v(" "),t("td",[s._v("支持")]),s._v(" "),t("td",[s._v("不支持")])])])]),s._v(" "),t("h3",{attrs:{id:"索引分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引分类"}},[s._v("#")]),s._v(" "),t("strong",[s._v("索引分类")])]),s._v(" "),t("p",[s._v("索引分类主要分为以下四类")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("分类")]),s._v(" "),t("th",[s._v("含义")]),s._v(" "),t("th",[s._v("特点")]),s._v(" "),t("th",[s._v("关键字")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("主键索引")]),s._v(" "),t("td",[s._v("针对表中主键创建的索引")]),s._v(" "),t("td",[s._v("默认自动创建，只能有一个")]),s._v(" "),t("td",[s._v("PRIMARY")])]),s._v(" "),t("tr",[t("td",[s._v("唯一索引")]),s._v(" "),t("td",[s._v("避免同一个表中某数据列中的值重复")]),s._v(" "),t("td",[s._v("可以有多个")]),s._v(" "),t("td",[s._v("UNIQUE")])]),s._v(" "),t("tr",[t("td",[s._v("常规索引")]),s._v(" "),t("td",[s._v("快速定位特定数据")]),s._v(" "),t("td",[s._v("可以有多个")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("全文索引")]),s._v(" "),t("td",[s._v("全文索引查找的是文本中的关键词，而不是比较索引中的值")]),s._v(" "),t("td",[s._v("可以有多个")]),s._v(" "),t("td",[s._v("FULLTEXT")])])])]),s._v(" "),t("p",[s._v("在InnoDB存储引擎中，根据索引的存储引擎，又可以分为以下两种")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("分类")]),s._v(" "),t("th",[s._v("含义")]),s._v(" "),t("th",[s._v("特点")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("聚焦索引（Clustered Index）")]),s._v(" "),t("td",[s._v("将数据存储与索引放到了一块，索引结构的叶子节点保存了行数据")]),s._v(" "),t("td",[s._v("必须有，而且只有一个")])]),s._v(" "),t("tr",[t("td",[s._v("二级索引（Secondary Index）")]),s._v(" "),t("td",[s._v("将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键")]),s._v(" "),t("td",[s._v("可以存在多个")])])])]),s._v(" "),t("p",[s._v("聚集索引选取规则")]),s._v(" "),t("ul",[t("li",[s._v("如果存在主键，主键索引就是聚集索引")]),s._v(" "),t("li",[s._v("如果不存在主键，将使用第一个唯一索引作为聚集索引")]),s._v(" "),t("li",[s._v("如果表没有主键，或没有合适的唯一索引，则InnoDB将会自动生成一个rowid作为隐藏的聚集索引")])]),s._v(" "),t("p",[s._v("一般是先在二级索引上找到主键数据，再回表查询在聚集索引上找到行数据")]),s._v(" "),t("h3",{attrs:{id:"索引语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引语法"}},[s._v("#")]),s._v(" "),t("strong",[s._v("索引语法")])]),s._v(" "),t("p",[s._v("创建索引")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("FULLTEXT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_col_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("查看索引")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n")])])]),t("p",[s._v("删除索引")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name\n")])])]),t("h3",{attrs:{id:"sql性能分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql性能分析"}},[s._v("#")]),s._v(" "),t("strong",[s._v("SQL性能分析")])]),s._v(" "),t("ul",[t("li",[s._v("SQL执行频率")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Com_______'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n得到结果\n\n")])])]),t("p",[t("img",{attrs:{src:"%E8%BF%9B%E9%98%B6%20e6f38e99be724120a1e2138efebeb25f/Untitled%201.png",alt:"Untitled"}})]),s._v(" "),t("p",[s._v("可以看到我们现在当前数据库以上各种操作的次数，我们就可以看当前数据库哪种操作为主")]),s._v(" "),t("ul",[t("li",[s._v("慢查询日志：慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认10s）的所有sql语句的日志。")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'slow_query_log'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("profile详情：show profiles能够在做MySQL优化时帮助我们了解时间都耗费到哪里去了，通过having_profiling参数，能够看到当前MySQL是否支持profile操作")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" @"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@have_profiling")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("默认是关闭的，可以通过set语句在session/global级别开启profiling")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" profiling"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("执行一系列的业务SQL操作，可以通过以下直领查看执行耗时情况")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" profiles"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("explain执行计划")])]),s._v(" "),t("p",[s._v("explain 或者 desc命令获取MySQL如何执行select语句的信息，包括在select语句执行过程中表如何连接和连接的顺序")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_sku "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   id："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 查询的序列号，表示查询中执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("子句或者是操作表的顺序（id相同，执行顺序从上到下；id不同，id值越大，越先执行）\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\\_type：表示"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 的类型，常见的取值有"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SIMPLE")]),s._v("（简单表，即不使用表连接或子查询），"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v("（主查询，即外层的查询），"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v("（"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v("中的第二个或者后面的查询语句），SUBQUERY（"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" 后面包含了子查询）等\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v("：表示连接类型，性能由好到差的连接类型为"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("、system、const、eq\\_ref、ref、range、"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v("、"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   possible\\_key：显示可能应用在这张表上的索引，一个或多个\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v("：实际使用的索引，如果为"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("，则没有使用索引\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v("\\_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v("：MySQL认为必须要执行查询的行数，在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v("引擎的表中，是一个估计值，可能并不总是准确的\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   filtered：表示返回结果的行数占需要读取行数的百分比，filtered的值越大越好\n")])])]),t("h3",{attrs:{id:"索引使用规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引使用规则"}},[s._v("#")]),s._v(" "),t("strong",[s._v("索引使用规则")])]),s._v(" "),t("ul",[t("li",[s._v("最左前缀法则：如果索引了多列（联合索引），要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。如果跳跃某一列，索引将部分失效（后面的字段索引失效）。")]),s._v(" "),t("li",[s._v("范围查询：联合索引中，出现范围查询（>、<），范围查询右侧的列索引失效")]),s._v(" "),t("li",[s._v("索引失效情况：\n"),t("ul",[t("li",[s._v("在索引列上进行运算操作")]),s._v(" "),t("li",[s._v("字符串类型字段查询不加引号")]),s._v(" "),t("li",[s._v("如果仅仅是尾部模糊匹配，索引不会失效，如果是头部模糊匹配，索引失效")]),s._v(" "),t("li",[s._v("用or分割开的条件，如果or前的条件的列有索引，而后面的列中没有索引，那么涉及的索引都不会被用到")]),s._v(" "),t("li",[s._v("如果MySQL评估使用索引比全表更慢，则不会使用索引")])])]),s._v(" "),t("li",[s._v("覆盖索引和回表查询：尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能够找到），减少select *。会有以下两种情况\n"),t("ul",[t("li",[s._v("using index condition：查找使用了索引，但是需要回表查询数据")]),s._v(" "),t("li",[s._v("using where; using index：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询数据")])])]),s._v(" "),t("li",[s._v("前缀索引：当字段类型为字符串时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO，影响查询效率。此时可以只将字符串的一部分前缀建立索引，这样可以大大节约索引空间，从而提高索引效率。")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("前缀长度可以根据索引的选择性来决定，而选择性是指不重复的索引值和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性为1，这是性能最好的索引选择性")]),s._v(" "),t("ul",[t("li",[s._v("单列及联合索引\n"),t("ul",[t("li",[s._v("单列索引：即一个索引只包含单个列")]),s._v(" "),t("li",[s._v("联合索引：即一个索引包含多个列")])])])]),s._v(" "),t("h3",{attrs:{id:"索引设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引设计原则"}},[s._v("#")]),s._v(" "),t("strong",[s._v("索引设计原则")])]),s._v(" "),t("ul",[t("li",[s._v("针对于数据量较大，且查询比较频繁的表建立索引")]),s._v(" "),t("li",[s._v("针对于常作为查询条件、排序、分组操作的字段建立索引")]),s._v(" "),t("li",[s._v("尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高")]),s._v(" "),t("li",[s._v("如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立前缀索引")]),s._v(" "),t("li",[s._v("尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率")]),s._v(" "),t("li",[s._v("如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它，当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询")]),s._v(" "),t("li",[s._v("要控制索引的数量，索引并不是多多益善，索引越多，维护索引的代价也就越大，会影响增删改的效率")])]),s._v(" "),t("h2",{attrs:{id:"sql优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[s._v("#")]),s._v(" "),t("strong",[s._v("SQL优化")])]),s._v(" "),t("h3",{attrs:{id:"插入数据优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入数据优化"}},[s._v("#")]),s._v(" 插入数据优化")]),s._v(" "),t("ul",[t("li",[s._v("批量插入，避免每一次插入数据与数据库进行连接")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jerry'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("手动提交事务")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transaction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jerry'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jerry'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jerry'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("主键顺序插入")]),s._v(" "),t("li",[s._v("大批量插入数据：如果需要一次性插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令进行插入")])]),s._v(" "),t("h3",{attrs:{id:"主键优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键优化"}},[s._v("#")]),s._v(" 主键优化")]),s._v(" "),t("ul",[t("li",[s._v("数据组织方式：在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表")])]),s._v(" "),t("p",[t("img",{attrs:{src:"%E8%BF%9B%E9%98%B6%20e6f38e99be724120a1e2138efebeb25f/Untitled%202.png",alt:"Untitled"}})]),s._v(" "),t("ul",[t("li",[s._v("页分裂：页可以为空，也可以填充一半。每个页包含了2-N行数据，根据主键排列。当主键乱序插入时，一页可能按照原本顺序无法插入数据，因此可能会产生页分裂的情况来按照主键顺序排列")]),s._v(" "),t("li",[s._v("页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记为删除并且它的空间变得允许被其他记录声明使用。一旦被标记删除后，当页中删除的记录达到MERGE_THRESHOLD，InnoDB会开始寻找最靠近的页，看看是否可以将两个页合并以优化空间使用。")]),s._v(" "),t("li",[s._v("主键设计原则\n"),t("ul",[t("li",[s._v("在满足业务需求的情况下，尽量降低主键的长度。")]),s._v(" "),t("li",[s._v("插入数据时，尽量选择顺序插入，选择使用AUTO_INCREMENT自增主键")]),s._v(" "),t("li",[s._v("尽量不要使用UUID做主键或者是其他自然主键，如身份证号")]),s._v(" "),t("li",[s._v("业务操作时，避免对主键的修改")])])])]),s._v(" "),t("h3",{attrs:{id:"order-by优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-by优化"}},[s._v("#")]),s._v(" order by优化")]),s._v(" "),t("ul",[t("li",[s._v("两种形式\n"),t("ul",[t("li",[s._v("Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫FileSort排序")]),s._v(" "),t("li",[s._v("Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为using index，不需要额外排序，操作效率高")])])]),s._v(" "),t("li",[s._v("根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则")]),s._v(" "),t("li",[s._v("尽量使用覆盖索引")]),s._v(" "),t("li",[s._v("多字段排序，一个升序一个降序，此时需注意联合索引在创建时的规则")]),s._v(" "),t("li",[s._v("如果不可避免出现filesort，大数据量排序时，可以适当增大排序缓冲区大")])]),s._v(" "),t("h3",{attrs:{id:"group-by优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#group-by优化"}},[s._v("#")]),s._v(" group by优化")]),s._v(" "),t("ul",[t("li",[s._v("在分组操作时，可以通过索引来提高效率")]),s._v(" "),t("li",[s._v("分组操作时，索引的使用也是满足最左前缀法则的")])]),s._v(" "),t("h3",{attrs:{id:"limit优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limit优化"}},[s._v("#")]),s._v(" limit优化")]),s._v(" "),t("ul",[t("li",[s._v("覆盖索引+子查询：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化")])]),s._v(" "),t("h2",{attrs:{id:"视图-存储过程-触发器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图-存储过程-触发器"}},[s._v("#")]),s._v(" "),t("strong",[s._v("视图-存储过程-触发器")])]),s._v(" "),t("h3",{attrs:{id:"视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[s._v("#")]),s._v(" 视图")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("介绍：视图（View）是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的")])]),s._v(" "),t("li",[t("p",[s._v("创建")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建视图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查询视图")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询视图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" stu_v_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("修改视图")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 修改视图")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("删除视图")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" stu_v_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),t("aside",[s._v("\n⚠️ **检查选项：当使用with check option子句创建视图时，MySQL会通过视图检查正在更改的每个行，以使其符合视图的定义。**\n")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("replace")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" stu_v_1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cascaded")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("check")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("option")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"存储过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[s._v("#")]),s._v(" "),t("strong",[s._v("存储过程")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("介绍：存储过程是事先经过编译并存储在数据库中的一段SQL语句的集合。存储过程可以对SQL语句进行封装和复用，类似于编程语言中的函数。")])]),s._v(" "),t("li",[t("p",[s._v("特点")]),s._v(" "),t("ul",[t("li",[s._v("封装,复用")]),s._v(" "),t("li",[s._v("可以接受参数，也可以返回数据")]),s._v(" "),t("li",[s._v("存储过程无法使用 SELECT 指令来运行，因为它是子程序，与查看表，数据表或用户定义函数不同。")]),s._v(" "),t("li",[s._v("存储过程可以用在数据检验，强制实行商业逻辑等。")]),s._v(" "),t("li",[s._v("减少网络交互，效率提升")])])]),s._v(" "),t("li",[t("p",[s._v("创建")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" 存储过程名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("参数列表"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- sql语句")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("调用")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("call")]),s._v(" 名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("参数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查看")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" information_schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ROUTINES "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ROUTINE_SCHEMA"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'itcast'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("删除")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" p1\n")])])])]),s._v(" "),t("li",[t("p",[s._v("变量")]),s._v(" "),t("ul",[t("li",[s._v("系统变量：系统变量是MySQL系统服务器提供，不是用户定义的，属于服务器层面，分为全局变量和会话变量")]),s._v(" "),t("li",[s._v("用户定义变量：用户根据需要自己定义的变量，用户变量不用提前声明，在用的时候直接用“@变量名”使用即可，其作用域为当前连接")]),s._v(" "),t("li",[s._v("局部变量：根据需要定义的在局部生效的变量，访问之前，需要DECLARE声明。可用作存储过程内的局部变量和输入参数，局部变量的范围是在其内声明的BEGIN...END块")])])]),s._v(" "),t("li",[t("p",[s._v("if判断")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" score "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("58")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" score "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("85")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'优秀'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elseif")]),s._v(" score "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'及格'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'不及格'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("参数")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("类型")]),s._v(" "),t("th",[s._v("含义")]),s._v(" "),t("th",[s._v("备注")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("IN")]),s._v(" "),t("td",[s._v("该类参数作为输入，也就是需要调用时传入值")]),s._v(" "),t("td",[s._v("默认")])]),s._v(" "),t("tr",[t("td",[s._v("OUT")]),s._v(" "),t("td",[s._v("该类参数作为输出，也就是该参数可以作为返回值")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("INOUT")]),s._v(" "),t("td",[s._v("既可以作为输入参数，也可以作为输出参数")]),s._v(" "),t("td")])])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 根据传入的200分制的分数，进行换算，换算成百分制，然后返回")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inout")]),s._v(" score "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" score :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" score "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@score")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("198")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("call")]),s._v(" p5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@score")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@score")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("case")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 根据传入的月份，判定月份所属的季节（要求采用case结构）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 1-3月份，为第一季度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 4-6月份，为第二季度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 7-9月份，为第三季度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 10-12月份，为第四季度")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'第一季度'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'第二季度'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'第三季度'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'第四季度'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" result :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'非法参数'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" concat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'您输入的月份为: '")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("month")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', 所属的季度为: '")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("循环")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("while")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 计算从1累加到n的值，n为传入的参数值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p7"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" total :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" n :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" total"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("repeat")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("repeat")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" total :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" n :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    until  n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("repeat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" total"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("loop：可以配合LEAVE和ITERATE语句进行使用")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    sum:"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("loop")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("leave")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" total :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" n :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("loop")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" total"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("游标cursor：用来存储查询结果集的数据类型，在存储过程和函数中可以使用游标对结果集进行循环的处理。游标的使用包括游标的声明、OPEN、FETCH和CLOSE")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 根据传入的参数uage，来查询用户表 tb_user中，所有的用户年龄小于等于uage的用户姓名（name）和专业（profession），")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 并将用户的姓名和专业插入到所创建的一张新表(id,name,profession)中。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 逻辑:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- A. 声明游标, 存储查询结果集")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- B. 准备: 创建表结构")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- C. 开启游标")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- D. 获取游标中的记录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- E. 插入数据到新表中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- F. 关闭游标")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p11"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" uage "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" uname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" upro "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" u_cursor "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cursor")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("profession "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" uage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("handler")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" SQLSTATE "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'02000'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("close")]),s._v(" u_cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" tb_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" tb_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        profession "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("open")]),s._v(" u_cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fetch")]),s._v(" u_cursor "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" uname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("upro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_user_pro "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" uname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" upro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("close")]),s._v(" u_cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("条件处理程序handler：可以用来定义在流程控制结构执行过程中遇到问题时相应的处理步骤。以上的循环中由于没有定义退出循环的条件，于是在游标遍历完所有的数据后就会报错，因此就需要用到条件处理程序")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" p12"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" uage "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" uname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" upro "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" u_cursor "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("cursor")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("profession "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" uage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("handler")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" found "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("close")]),s._v(" u_cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" tb_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" tb_user_pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        profession "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("open")]),s._v(" u_cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fetch")]),s._v(" u_cursor "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" uname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("upro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_user_pro "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" uname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" upro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("close")]),s._v(" u_cursor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])])])])]),s._v(" "),t("h3",{attrs:{id:"存储函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储函数"}},[s._v("#")]),s._v(" "),t("strong",[s._v("存储函数")])]),s._v(" "),t("aside",[s._v("\n⚠️ 存储函数是有返回值的存储过程，存储函数的参数只能是IN类型的\n")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 从1到n的累加")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" fun1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deterministic")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" total :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" n :"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" total"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" fun1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("return type 说明\n"),t("ul",[t("li",[s._v("deterministic：相同的输入参数总是产生相同的结果")]),s._v(" "),t("li",[s._v("no sql：不包含sql语句")]),s._v(" "),t("li",[s._v("reads sql data：包含读取数据的语句，但不包含写入数据的语句")])])])]),s._v(" "),t("h3",{attrs:{id:"触发器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[s._v("#")]),s._v(" "),t("strong",[s._v("触发器")])]),s._v(" "),t("aside",[s._v("\n👽 介绍：触发器是与表有关的数据库对象，指在insert/update/delete之前或之后，触发并执行触发器中定义的sql语句集合。触发器这种特性可以协助应用在数据库端确保数据的完整性，日志记录，数据校验等操作\n")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("insert语法")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 需求: 通过触发器记录 user 表的数据变更日志(user_logs) , 包含增加, 修改 , 删除 ;")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 准备工作 : 日志表 user_logs")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" user_logs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  operation "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'操作类型, insert/update/delete'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  operate_time "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'操作时间'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  operate_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'操作的ID'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  operate_params "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'操作参数'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("innodb")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 插入数据触发器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trigger")]),s._v(" tb_user_insert_trigger\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("after")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for each row")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" user_logs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_params"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'insert'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" concat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'插入的数据内容为: id='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("',name='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', phone='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("phone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', email='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', profession='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("profession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" triggers "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trigger")]),s._v(" tb_user_insert_trigger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 插入数据到tb_user")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" tb_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" phone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" profession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" createtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'三皇子'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18809091212'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'erhuangzi@163.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'软件工程'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("update语法")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 修改数据触发器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trigger")]),s._v(" tb_user_update_trigger\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("after")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for each row")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" user_logs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_params"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'update'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        concat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'更新之前的数据: id='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("',name='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', phone='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("phone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', email='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', profession='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("profession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' | 更新之后的数据: id='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("',name='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', phone='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("phone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', email='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', profession='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("profession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" triggers "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" profession "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'会计'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" profession "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'会计'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("delete语法")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除数据触发器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trigger")]),s._v(" tb_user_delete_trigger\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("after")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for each row")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" user_logs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" operate_params"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delete'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        concat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'删除之前的数据: id='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("',name='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', phone='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("phone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', email='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("', profession='")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("profession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" triggers "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" tb_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])])])]),s._v(" "),t("h2",{attrs:{id:"锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[s._v("#")]),s._v(" 锁")]),s._v(" "),t("aside",[s._v("\n💡 锁\n"),t("p",[s._v("锁是计算机协调多个进程或线程并发访问某一资源的机制。在数据库中，除了传统的计算资源的争用外，数据也是一种供许多用户共享的资源。如何保证数据并发访问的一致性、有效性是所有数据库必须解决的一个问题，锁冲突也是影响数据库并发访问性能的一个重要因素。按照锁的粒度分，分为以下三类")]),s._v(" "),t("p",[s._v("· 全局锁：锁定数据库中的所有表")]),s._v(" "),t("p",[s._v("· 表级锁：每次操作锁住整张表")]),s._v(" "),t("p",[s._v("· 行级锁：每次操作锁住对应的行数据")])]),s._v(" "),t("h3",{attrs:{id:"全局锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局锁"}},[s._v("#")]),s._v(" 全局锁")]),s._v(" "),t("aside",[s._v("\n💡 全局锁是对整个数据库实例加锁，加锁后整个实例就处于只读状态，后续的DML的写语句，DDL语句，以及更新操作的事务提交语句都将被阻塞\n")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("flush "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 施加全局锁")]),s._v("\nmysqldump uroot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p1234 itcast"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("itcast"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sql")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 数据备份")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unlock")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 解锁")]),s._v("\n\n")])])]),t("ul",[t("li",[s._v("特点：数据库中加全局锁，是一个比较重的操作，存在以下问题\n"),t("ul",[t("li",[s._v("如果在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆")]),s._v(" "),t("li",[s._v("如果在从库上备份，那么在备份期间从库不能执行主库同步过来的二进制日志，会导致主从延迟")])])])]),s._v(" "),t("h3",{attrs:{id:"表级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表级锁"}},[s._v("#")]),s._v(" "),t("strong",[s._v("表级锁")])]),s._v(" "),t("ul",[t("li",[s._v("表级锁，每次操作锁住整张表。锁定粒度大，发生锁冲突的概率最高，并发度最低")]),s._v(" "),t("li",[s._v("表锁\n"),t("ul",[t("li",[s._v("表共享读锁（read lock）：只能读不能写，且不会阻塞其他客户端的读操作，但会阻塞其他客户端的写操作")]),s._v(" "),t("li",[s._v("表独占写锁（write lock）：对于当前客户端，既能读也能写，对于其他客户端，既不能读也不能写。")]),s._v(" "),t("li",[s._v("语法\n◦ 加锁：lock tables 表名 read/write\n◦ 释放锁：unlock tables")])])]),s._v(" "),t("li",[s._v("元数据锁（meta data lock，MDL）：MDL加锁过程是系统自动控制，无需显式使用，在访问一张表的时候会自动加上。MDL锁主要作用就是维护表元数据的数据一致性，在表上有活动事务的时候，不可以对元数据进行写入操作。以下标为为MDL类型及其对应SQL语句")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("对应SQL")]),s._v(" "),t("th",[s._v("锁类型")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("lock tables xxx read/write")]),s._v(" "),t("td",[s._v("SHARED_READ_ONLY/SHARED_NO_READ_WRITE")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("select、select ... lock in share mode")]),s._v(" "),t("td",[s._v("SHARED_READ")]),s._v(" "),t("td",[s._v("与SHARED_READ、SHARED_READ兼容，与EXLUSIVE互斥")])]),s._v(" "),t("tr",[t("td",[s._v("insert、update、delete、select ... for update")]),s._v(" "),t("td",[s._v("SHARED_READ")]),s._v(" "),t("td",[s._v("与SHARED_READ、SHARED_READ兼容，与EXLUSIVE互斥")])]),s._v(" "),t("tr",[t("td",[s._v("alter table")]),s._v(" "),t("td",[s._v("EXLUSIVE")]),s._v(" "),t("td",[s._v("与其他的MDL互斥")])])])]),s._v(" "),t("p",[s._v("同样可以查看元数据锁")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" object_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("object_schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("object_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("lock_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("lock_duration "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" performance_schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("metadata_locks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("意向锁：为了避免DML在执行时，加的行锁与表锁的冲突，在InnoDB中引入了意向锁，使得表锁不用检查每行数据是否加锁，使用意向锁来减少表锁的检查。\n"),t("ul",[t("li",[s._v("意向共享锁：由语句select ... lock in share mode添加。与表锁共享锁兼容，与表锁排他锁互斥")]),s._v(" "),t("li",[s._v("意向排他锁：由insert、update、delete、select ... for update添加。与表锁共享锁及排他锁互斥，意向锁之间不会互斥")])])])]),s._v(" "),t("h3",{attrs:{id:"行级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行级锁"}},[s._v("#")]),s._v(" "),t("strong",[s._v("行级锁")])]),s._v(" "),t("blockquote",[t("p",[s._v("行级锁：每次操作锁住对应的行数据。锁定粒度最小，发生锁冲突的概率最低，并发度最高。InnoDB的数据是基于索引组织的，行锁是通过对索引上的索引项加锁来实现的，对于行级锁，主要分为以下三类")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("行锁：锁定单个行记录的锁，防止其他事务对此行进行update和delete操作")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("共享锁：允许一个事务去读一行，组织其他事务获得相同数据集的排他锁")])]),s._v(" "),t("li",[t("p",[s._v("排他锁：允许获取排他锁的事务更新数据，组织其他事务获得相同数据集的共享锁和排他锁")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("SQL")]),s._v(" "),t("th",[s._v("行锁类型")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("insert")]),s._v(" "),t("td",[s._v("排他锁")]),s._v(" "),t("td",[s._v("自动加锁")])]),s._v(" "),t("tr",[t("td",[s._v("update")]),s._v(" "),t("td",[s._v("排他锁")]),s._v(" "),t("td",[s._v("自动加锁")])]),s._v(" "),t("tr",[t("td",[s._v("delete")]),s._v(" "),t("td",[s._v("排他锁")]),s._v(" "),t("td",[s._v("自动加锁")])]),s._v(" "),t("tr",[t("td",[s._v("select")]),s._v(" "),t("td",[s._v("不加任何锁")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("select ... lock in share mode")]),s._v(" "),t("td",[s._v("共享锁")]),s._v(" "),t("td",[s._v("需要手动在select后面加lock in share mode")])]),s._v(" "),t("tr",[t("td",[s._v("select ... for update")]),s._v(" "),t("td",[s._v("排他锁")]),s._v(" "),t("td",[s._v("需要手动在select后面加for update")])])])])])])]),s._v(" "),t("li",[t("p",[s._v("间隙锁：锁定索引记录间隙，确保索引记录间隙不变，防止其他事务在这个间隙进行insert，产生幻读。间隙锁唯一目的是防止其他事务插入间隙。间隙锁可以共存，一个事务采用的间隙锁不会阻止另一个事务在同一间隙上采用间隙锁")])]),s._v(" "),t("li",[t("p",[s._v("临键锁：行锁和间隙锁结合，同时锁住数据，并锁住数据前面的间隙Gap")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);