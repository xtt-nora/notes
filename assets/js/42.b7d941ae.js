(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{484:function(t,a,s){t.exports=s.p+"assets/img/Untitled.cd5760ae.png"},506:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("@[TOC]")]),t._v(" "),a("h1",{attrs:{id:"html-css知识记录进度条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-css知识记录进度条"}},[t._v("#")]),t._v(" html/css知识记录进度条 📄")]),t._v(" "),a("p",[a("strong",[t._v("基础/筑基")])]),t._v(" "),a("h2",{attrs:{id:"css3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3"}},[t._v("#")]),t._v(" Css3")]),t._v(" "),a("h3",{attrs:{id:"盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),a("p",[t._v("结构包括：content（内容），padding，border，margin；"),a("br"),t._v("\n默认盒模型是通过"),a("strong",[t._v("内容区域的宽度 + 内边距 + 边框宽度")]),t._v("来计算；"),a("br"),t._v("\n你可以通过 "),a("strong",[t._v("box-sizing")]),t._v(" 属性来控制盒模型的计算方式：\n"),a("code",[t._v("box-sizing: content-box;")]),t._v("：这是默认值，宽度和高度只包括内容区域，不包括内边距和边框。\n"),a("code",[t._v("box-sizing: border-box;")]),t._v("：元素的宽度和高度包括内边距和边框的大小。这样设置后，元素的总大小不会因为内边距和边框而增加。")]),t._v(" "),a("h3",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("p",[t._v("BFC 是一个独立的渲染区域，BFC 中的元素布局不会影响到 BFC 外部的元素，反之亦然。"),a("br"),t._v("\n换句话说，"),a("strong",[t._v("BFC 让元素的布局行为与外部的布局环境隔离开来")]),t._v("。在 BFC 内部，块级元素会按正常的文档流规则排列，而不受外部影响。"),a("br"),t._v(" "),a("strong",[t._v("触发BFC的情况：")])]),t._v(" "),a("ul",[a("li",[t._v("浮动元素（float）：元素的 float 属性不为 none 时，元素会形成 BFC。")]),t._v(" "),a("li",[t._v("绝对定位元素（position）：元素的 position 属性为 absolute 或 fixed 时，元素会形成 BFC。")]),t._v(" "),a("li",[t._v("内联块元素（display）：当元素的 display 属性为 inline-block、block 或 table 时，它也会触发 BFC。")]),t._v(" "),a("li",[t._v("overflow：当元素的 overflow 属性不为 visible 时（例如 overflow: hidden; 或 overflow: auto;），它会创建 BFC。")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v(".example {\n    float: left;\n}\n.example {\nposition: absolute;\n}\n.example {\ndisplay: block;\n}\n.example {\noverflow: hidden;\n}\n")])])]),a("p",[a("strong",[t._v("BFC的作用")])]),t._v(" "),a("ol",[a("li",[t._v("清除浮动\n"),a("ul",[a("li",[t._v("浮动元素不会影响正常的文档流，这可能会导致父容器高度坍塌。通过创建 BFC，可以让父容器包含浮动元素。 例如，设置 overflow: hidden; 或 display: inline-block; 来触发 BFC，从而清除浮动。")])])]),t._v(" "),a("li",[t._v("防止外边距重叠（margin collapse）\n"),a("ul",[a("li",[t._v("当相邻的两个块级元素的外边距发生重叠时，外边距的较大值会被保留。BFC 内部的元素可以避免这种重叠")])])]),t._v(" "),a("li",[t._v("元素独立布局\n"),a("ul",[a("li",[t._v("BFC 内的元素不会影响到外部的布局，反之亦然。这使得 BFC 可以用于处理一些复杂的布局，避免外部干扰。")])])])]),t._v(" "),a("h3",{attrs:{id:"一个盒子如何快速居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个盒子如何快速居中"}},[t._v("#")]),t._v(" 一个盒子如何快速居中")]),t._v(" "),a("ol",[a("li",[t._v("使用 Flexbox（同时水平和垂直居中）")]),t._v(" "),a("li",[t._v("使用 Grid（同时水平和垂直居中）")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("盒子内容"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.container {\ndisplay: grid;\nplace-items: center;      /* 同时水平和垂直居中 */\nheight: 100vh;            /* 设置父容器高度为视口高度 */\n}\n.box {\nwidth: 200px;\nheight: 100px;\nbackground-color: lightgreen;\n}\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("使用 margin: auto（水平居中，固定宽度）")]),t._v(" "),a("li",[t._v("使用绝对定位（水平和垂直居中）")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("盒子内容"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.container {\nposition: relative;\nheight: 100vh;           /* 设置父容器高度为视口高度 */\n}\n.box {\nposition: absolute;\ntop: 50%;                /* 垂直居中 */\nleft: 50%;               /* 水平居中 */\ntransform: translate(-50%, -50%); /* 通过transform精确调整 */\nwidth: 200px;\nheight: 100px;\nbackground-color: lightyellow;\n}\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("使用 text-align: center（水平居中，适用于内联元素） 对于内联元素或者行内块元素（如图片、文本等），可以使用 text-align: center 让其水平居中。")])]),t._v(" "),a("h3",{attrs:{id:"如何居中一个浮动元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何居中一个浮动元素"}},[t._v("#")]),t._v(" 如何居中一个浮动元素")]),t._v(" "),a("p",[t._v("确定容器的宽高，如宽500、高 300的层，设置层的外边距")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("     .div { \n      Width:500px ; height:300px;//高度可以不设\n      Margin: -150px 0 0 -250px;\n      position:relative;相对定位\n      background-color:pink;//方便看效果\n      left:50%;\n      top:50%;\n    }\n")])])]),a("h3",{attrs:{id:"画一条0-5px的线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画一条0-5px的线"}},[t._v("#")]),t._v(" 画一条0.5px的线")]),t._v(" "),a("ol",[a("li",[t._v("使用 border 属性")]),t._v(" "),a("li",[t._v("使用 box-shadow 属性")]),t._v(" "),a("li",[t._v("使用 linear-gradient 创建细线")]),t._v(" "),a("li",[t._v("使用 transform 放大1px线条")]),t._v(" "),a("li",[t._v("使用 svg 创建细线")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("1. 使用 border 属性\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.line {\nheight: 0.5px;            /* 设置高度为0.5px */\nbackground: linear-gradient(to right, black 0.5px, transparent 0.5px);\nwidth: 100%;              /* 设置宽度为100% */\n}\n2. 使用 box-shadow 属性\n.line {\nwidth: 100%;\nheight: 0;\nbox-shadow: 0 0 0 0.5px black; /* 创建0.5px的细线 */\n}\n3.使用 linear-gradient 创建细线\n.line {\nheight: 0.5px;            /* 设置高度为0.5px */\nbackground: linear-gradient(to right, black 0.5px, transparent 0.5px);\nwidth: 100%;              /* 设置宽度为100% */\n}\n4. 使用 transform 放大1px线条\n.line {\nwidth: 100%;\nheight: 1px;\nbackground-color: black;\ntransform: scaleY(0.5); /* 将线条沿Y轴缩放到0.5 */\n}\n5. 使用 svg 创建细线\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("svg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("line")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("x1")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("y1")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("x2")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("y2")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("stroke")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("stroke-width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("svg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"transform-transition-animation三者定义区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-transition-animation三者定义区分"}},[t._v("#")]),t._v(" transform,transition,animation三者定义区分")]),t._v(" "),a("p",[a("img",{attrs:{src:s(484),alt:"这是图片"}})]),t._v(" "),a("ol",[a("li",[t._v("transform"),a("br"),t._v("\n定义：transform 用于对元素进行二维或三维的转换，改变元素的位置、大小、形状等。它能够让元素进行平移、旋转、缩放、倾斜等操作。"),a("br"),t._v("\n常见值：")])]),t._v(" "),a("ul",[a("li",[t._v("translate()：平移")]),t._v(" "),a("li",[t._v("rotate()：旋转")]),t._v(" "),a("li",[t._v("scale()：缩放")]),t._v(" "),a("li",[t._v("skew()：倾斜")]),t._v(" "),a("li",[t._v("matrix()：定义复杂的变换")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("transition"),a("br"),t._v("\n定义：transition 用于平滑地过渡元素的某些样式属性的变化，通常涉及到属性的变化（如 color、width、height 等）从一个值到另一个值的过渡。transition 使得在状态变化时产生动画效果。"),a("br"),t._v("\n常见属性：")])]),t._v(" "),a("ul",[a("li",[t._v("transition-property：指定哪个属性应该应用过渡效果。")]),t._v(" "),a("li",[t._v("transition-duration：指定过渡效果持续的时间。")]),t._v(" "),a("li",[t._v("transition-timing-function：控制过渡的速度曲线（如 ease, linear 等）。")]),t._v(" "),a("li",[t._v("transition-delay：指定过渡的延迟时间。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("animation"),a("br"),t._v("\n定义：animation 用于实现更复杂的动画效果，它不仅可以控制元素的过渡效果，还可以指定一系列的关键帧（@keyframes），从而让元素的样式在时间轴上按照指定的顺序逐步变化。与 transition 不同，animation 可以控制动画的多个步骤，并且动画会自动循环或者反向播放。\n常见属性：")])]),t._v(" "),a("ul",[a("li",[t._v("animation-name：指定动画的名称（即关联的 @keyframes）。")]),t._v(" "),a("li",[t._v("animation-duration：动画的持续时间。")]),t._v(" "),a("li",[t._v("animation-timing-function：动画的速率曲线。")]),t._v(" "),a("li",[t._v("animation-delay：动画的延迟时间。")]),t._v(" "),a("li",[t._v("animation-iteration-count：动画的播放次数（可以是数字或 infinite，表示无限循环）。")]),t._v(" "),a("li",[t._v("animation-direction：指定动画的播放方向（如 normal、reverse、alternate）。")])]),t._v(" "),a("h3",{attrs:{id:"flex-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-1"}},[t._v("#")]),t._v(" flex:1")]),t._v(" "),a("p",[t._v("flex: 1 是 flex-grow: 1, flex-shrink: 1, 和 flex-basis: 0 的简写形式。\nflex: 1 是一个简写属性，通常用于设置某个元素的 弹性，使其在可用空间中根据需要进行伸缩。它相当于设置了 flex-grow, flex-shrink 和 flex-basis 的值"),a("br"),t._v("\nflex-grow（放大因子）\nflex-shrink（缩小因子）\nflex-basis（基础大小）")]),t._v(" "),a("h3",{attrs:{id:"如何定义高度为1px的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何定义高度为1px的容器"}},[t._v("#")]),t._v(" 如何定义高度为1px的容器")]),t._v(" "),a("p",[t._v("div{"),a("br"),t._v("\nheigh：1px;"),a("br"),t._v("\nwidth:10px;"),a("br"),t._v("\nbackground:#000;"),a("br"),t._v("\noverflow:hidden"),a("br"),t._v("\n} IE 6下这个问题是默认行高造成的，overflow:hidden | zoom:0.08 | line- height:1px这样也可以解决。")]),t._v(" "),a("h3",{attrs:{id:"ie中内容会自适应高度-而ff不会自适应高度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ie中内容会自适应高度-而ff不会自适应高度"}},[t._v("#")]),t._v(" IE中内容会自适应高度，而FF不会自适应高度")]),t._v(" "),a("p",[a("strong",[t._v("在要自适应高度的层中加一个层，样式为")]),t._v(" "),a("code",[t._v(".clear{clear:both;font-size:0px;height:1px}，")]),t._v(" "),a("strong",[t._v("这样解决有一个小小的问题，高度会多一个像素。还有一种解决方法，给当前层加上一个伪类。")]),t._v(" "),a("code",[t._v('#test:after { content: "."; display: block; height: 0; clear: both; visibility: hidden; }')])]),t._v(" "),a("h3",{attrs:{id:"用纯-css-创建一个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用纯-css-创建一个三角形"}},[t._v("#")]),t._v(" 用纯 CSS 创建一个三角形")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("把上、左、右三条边隐藏掉（颜色设为 transparent）\n#demo {\nwidth:0;\nheight: 0;\nborder-width: 20px;\nborder-style: solid;\nborder-color: transparent transparent red transparent;\n}\n")])])]),a("h3",{attrs:{id:"怎么让chrome支持小于12px"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么让chrome支持小于12px"}},[t._v("#")]),t._v(" 怎么让Chrome支持小于12px")]),t._v(" "),a("p",[a("code",[t._v("body{-webkit-text-size-adjust:none}")])]),t._v(" "),a("h3",{attrs:{id:"before-和-after中双冒号和单冒号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#before-和-after中双冒号和单冒号"}},[t._v("#")]),t._v(" ::before 和 :after中双冒号和单冒号")]),t._v(" "),a("p",[t._v("单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。"),a("br"),t._v(" "),a("strong",[t._v("伪元素由双冒号和伪元素名称组成")]),t._v("。双冒号是在css3规范中引入的，用于区分伪类和伪元素。但是伪类兼容现存样式，浏览器需要同时支持旧的伪类，比如:first-line、:first-letter、:before、:after等。"),a("br"),t._v("\n对于CSS2之前已有的伪元素，比如:before，单冒号和双冒号的写法::before作用是一样的。"),a("br"),t._v("\n提醒，如果你的网站只需要兼容webkit、firefox、opera等浏览器，建议对于伪元素采用双冒号的写法，如果不得不兼容IE浏览器，还是用CSS2的单冒号写法比较安全。")]),t._v(" "),a("h3",{attrs:{id:"sass-和-less"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-和-less"}},[t._v("#")]),t._v(" Sass 和 Less")]),t._v(" "),a("p",[t._v("Sass是一种动态样式语言，语法跟css一样(但多了些功能)，比css好写，而且更容易阅读。Sass语法类似与Haml，属于缩排语法（makeup），用意就是为了快速写Html和Css。"),a("br"),t._v("\nLess一种动态样式语言. 将CSS赋予了动态语言的特性，如变量，继承，运算， 函数. LESS 既可以在客户端上运行 (支持IE 6+, Webkit, Firefox)，也可一在服务端运行 (借助 Node.js)。"),a("br"),t._v("\n区别：\n(1))Sass是基于Ruby的，是在服务端处理的，而Less是需要引入less.js来处理Less代码输出Css到浏览器，也可以在开发环节使用Less，然后编译成Css文件，直接放到项目中，也有Less.app、SimpleLess、CodeKit.app这样的工具，也有在线编译地址。"),a("br"),t._v("\n(2)变量符不一样，less是@，而Scss是$，而且变量的作用域也不一样，后面会讲到。"),a("br"),t._v("\n(3)输出设置，Less没有输出设置，Sass提供4中输出选项：nested, compact, compressed 和 expanded。"),a("br"),t._v("\n(4)Sass支持条件语句，可以使用if{}else{},for{}循环等等。而Less不支持。")]),t._v(" "),a("h3",{attrs:{id:"常见ie6的浏览器兼容bug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见ie6的浏览器兼容bug"}},[t._v("#")]),t._v(" 常见ie6的浏览器兼容bug")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("文字本身的大小不兼容。")]),t._v("\n同样是font-size:14px的宋体文字，在不同浏览器下占的空间是不一样的，ie下实际占高16px，下留白3px，ff 下实际占高17px，上留白1px，下留白3px，opera下就更不一样了。解决方案：给文字设定 line-height 。确保所有文字都有默认的 line-height 值。")]),t._v(" "),a("li",[a("strong",[t._v("IE6吞吃现象")]),t._v("\n上下两个div，上面的div设置背景，却发现下面没有设置背景的div 也有了背景，这就是吞吃现象。对应上面的背景吞吃现象，还有滚动下边框缺失的现象。解决方案：使用zoom:1。这个zoom好象是专门为解决ie6 bug而生的。")]),t._v(" "),a("li",[a("strong",[t._v("IE6注释bug")]),t._v("\n注释也能产生bug~~~“多出来的一只猪。”这是前人总结这个bug使用的文案，ie6的这个bug 下，大家会在页面看到猪字出现两遍，重复的内容量因注释的多少而变。 解决方案：用"),a("code",[t._v("“<!–[if !IE]> picRotate start <![endif]–>”")]),t._v("方法写注释。")]),t._v(" "),a("li",[a("strong",[t._v("img 下的留白")])])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("“1.jpg”")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n把div的border打开，你发现图片底部不是紧贴着容器底部的，是img后面的空白字符造成，要消除必须这样写\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("”1.jpg”")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n后面两个标签要紧挨着。ie7下这个bug 依然存在。解决方案：给img设定 display:block。\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[t._v("失去line-height")]),t._v(" "),a("code",[t._v("<div style=”line-height:20px”><img />文字</div>")]),t._v("，很遗憾，在ie6下单行文字 line-height 效果消失了。原因是"),a("img"),t._v("这个inline-block元素和inline元素写在一起了。 解决方案：让img 和文字都 float起来。")]),t._v(" "),a("li",[a("strong",[t._v("clear层应该单独使用。也许你为了节省代码把clear属性直接放到下面的一个内容层，这样有问题，不仅仅是ff和op下失去margin效果，ie下某些margin值也会失效。")])]),t._v(" "),a("li",[a("strong",[t._v("ie 下overflow:hidden对其下的绝对层position:absolute或者相对层 position:relative无效。")]),t._v("\n解决方案：给overflow:hidden加position:relative或者position: absolute。 另，ie6支持overflow-x或者overflow-y的特性，ie7、ff不支持。")])]),t._v(" "),a("h2",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" Html")]),t._v(" "),a("h3",{attrs:{id:"websocket-如何兼容低浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket-如何兼容低浏览器"}},[t._v("#")]),t._v(" webSocket 如何兼容低浏览器？")]),t._v(" "),a("p",[t._v("Adobe Flash Socket"),a("br"),t._v("\nActiveX HTMLFile（IE）"),a("br"),t._v("\n基于 multipart 编码发送 XHR"),a("br"),t._v("\n基于长轮询的 XHR")])])}),[],!1,null,null,null);a.default=e.exports}}]);